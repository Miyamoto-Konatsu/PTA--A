#include <bits/stdc++.h>
using namespace std;
struct node
{
    int data, lchild, rchild;
};
vector<node> tree(20);
int parent[20];

void bfs(int top)
{
    queue<node> s;
    s.push(tree[top]);
    cout << s.front().data;
    while (!s.empty())
    {
        if (s.front().lchild != -1)
            s.push(tree[s.front().lchild]);
        if (s.front().rchild != -1)
            s.push(tree[s.front().rchild]);
        s.pop();
        if (!s.empty())
            cout << ' ' << s.front().data;
    }
}
int flag=0;
void in_order(int top)

{
    if(top!=-1)
    {
        in_order(tree[top].lchild);
        if(flag)
        cout<<' ';
        flag=1;
        cout<<tree[top].data;
        in_order(tree[top].rchild);
    }
}
int main()
{

    char a, b;
    int n;
    cin >> n;
    for (int i = 0; i < n; i++)
    {
        tree[i].data = i;
        cin >> a >> b;
        if (a == '-')
            tree[i].rchild = -1;
        else
        {
            tree[i].rchild = a - '0';
            parent[a - '0'] = 1;
        }
        if (b == '-')
            tree[i].lchild = -1;
        else
        {
            tree[i].lchild = b - '0';
            parent[b - '0'] = 1;
        }
    }
    int top;
    for (int i = 0; i < n; i++)
        if (parent[i] != 1)
            top = i;
    bfs(top);
    cout << endl;
    in_order(top);
    system("pause");
    return 0;
}
