#include <bits/stdc++.h>
using namespace std;
map<int, int> site;
int n, m, a, b, ancestor, flag = 1;
vector<int> pre, in;
void search(int prel, int prer, int inl, int inr)
{
  
    if (prel > prer || flag == 0)
        return;
    int i;
    for (i = inl; i <= inr; i++)
    {
        if (in[i] == pre[prel])
            break;
    }
    if (((site[a] <= i && site[b] >= i) || (site[b] <= i && site[a] >= i)))
    {
        ancestor = in[i];
        flag = 0;
    }
    else
    {
        search(prel + 1, prel + i - inl, inl, i - 1);
        search(prel + i - inl + 1, prer, i + 1, inr);
    }
}
int main()
{
    cin >> n >> m;
    pre.resize(m + 1);
    in.resize(m + 1);
    for (int i = 1; i <= m; i++)
    {
        scanf("%d", &in[i]);
        site[in[i]] = i;
    }
    for (int i = 1; i <= m; i++)
        scanf("%d", &pre[i]);
    for (int i = 0; i < n; i++)
    {
        scanf("%d%d", &a, &b);
        if (!site[a] && !site[b])
            printf("ERROR: %d and %d are not found.\n", a, b);
        else if (!site[a] || !site[b])
            printf("ERROR: %d is not found.\n", site[a] ? b : a);
        else
        {
            search(1, m, 1, m);
            flag = 1;
            if (ancestor == a || ancestor == b)
                printf("%d is an ancestor of %d.\n", ancestor, ancestor == a ? b : a);
            else
                printf("LCA of %d and %d is %d.\n", a, b, ancestor);
        }
    }
    system("pause");
    return 0;
}
