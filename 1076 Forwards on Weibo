#include <bits/stdc++.h>
using namespace std;
int n,m;

struct user
{
	int id;
	vector<int>followed;
	int floor;
};
void BFS(int id,int time,vector<user>use)
{
	vector<user>users(use);
	int visit[100010];
	fill(visit,visit+100010,0);
	queue<user>follows;
	visit[id]=1;
	int transmit=-1;
	users[id].floor=0;
	follows.push(users[id]);
	while(!follows.empty())
	{
		if(follows.front().floor>time)
		break;
		if(follows.front().floor<=time)
		{
			for(int i=0;i<follows.front().followed.size();i++)
			{
				if(!visit[users[follows.front().followed[i]].id])
				{
					follows.push(users[follows.front().followed[i]]);
					follows.back().floor=follows.front().floor+1;
					visit[users[follows.front().followed[i]].id]=1;
				}
			}
		}
		follows.pop();
		transmit++;
	}
	cout<<transmit<<endl;
}
int main()
{
	cin>>n>>m;
	vector<user>users(n+1);
	int a,b;
	for(int i=1;i<=n;i++)
	{
		users[i].id=i;
		cin>>a;
		for(int j=1;j<=a;j++)
		{	
			cin>>b;
			users[b].followed.push_back(i);
		}
	}
	cin>>a;
	for(int i=0;i<a;i++)
	{
		cin>>b;
		BFS(b,m,users);

	}
	system("pause");
	return 0;
	
}
