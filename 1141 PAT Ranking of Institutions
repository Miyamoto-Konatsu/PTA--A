#include <bits/stdc++.h>
using namespace std;

struct ins
{
    string id;
    double TWS, person;
};
vector<ins> institution(1);
map<string, int> id_to_int;
int start = 1;
bool cmp(ins a, ins b)
{
    if (a.TWS != b.TWS)
        return a.TWS > b.TWS;
    else if (a.person != b.person)
        return a.person < b.person;
    return a.id < b.id;
}
int main()
{
    double n, score;
    string a, b;
    cin >> n;
    for (int i = 0; i < n; i++)
    {
        cin >> a >> score >> b;
        transform(b.begin(), b.end(), b.begin(), ::tolower);
        if (a[0] == 'B')
            score /= 1.5;
        else if (a[0] == 'T')
            score *= 1.5;
        if (id_to_int[b] == 0)
        {
            id_to_int[b] = start++;
            institution.push_back({b, score, 1});
        }
        else
        {
            institution[id_to_int[b]].person++;
            institution[id_to_int[b]].TWS += score;
        }
    }
    sort(institution.begin() + 1, institution.end(), cmp);
    cout << institution.size() - 1 << endl;
    int top = institution[1].TWS, rank = 1;
    for (int i = 1; i < institution.size(); i++)
    {
        if (int(institution[i].TWS) != top)
        {
            rank = i;
            top =int( institution[i].TWS);
        }
        cout << rank;
        cout << ' ' << institution[i].id << ' ' << int(institution[i].TWS) << ' ' << institution[i].person << '\n';
    }
    system("pause");
    return 0;
}
