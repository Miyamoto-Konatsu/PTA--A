#include <bits/stdc++.h>
using namespace std;

int e[210][210];

int main()
{
    int n, m, a, b, c, k, p;
    cin >> n >> m;
    for (int i = 0; i < m; i++)
    {
        cin >> a >> b >> c;
        e[a][b] = c;
        e[b][a] = c;
    }
    cin >> k;
    int min_dis = INT_MAX, route;
    for (int i = 0; i < k; i++)
    {
        int dis = 0, flag = 1, visit[n + 1], visit_point = 0, start, end;
        fill(visit, visit + n + 1, 0);

        cin >> a >> b;
        start = b;
        for (int j = 0; j < a - 1; j++)
        {
            cin >> c;
            if (e[b][c])
            {
                dis += e[b][c];
                visit[b] = 1;
            }
            else
                flag = 0;
            b = c;
        }
        end = c;
        for (int j = 1; j <= n; j++){
            
            if (visit[j])
                visit_point++;
        }
     
        if (flag)
        {
            if (a == n + 1 && visit_point==n && start==end)
                printf("Path %d: %d (TS simple cycle)\n", i+1, dis);
            else if(visit_point==n && start==end)
                printf("Path %d: %d (TS cycle)\n", i+1, dis);
            else
                printf("Path %d: %d (Not a TS cycle)\n", i+1,dis);
            if (visit_point==n && start==end)
            {
                min_dis = dis;
                route = i + 1;
            }
        }
        else
            printf("Path %d: NA (Not a TS cycle)\n", i+1);
    }
    printf("Shortest Dist(%d) = %d\n", route,min_dis);
    system("pause");
    return 0;
}
