#include <bits/stdc++.h>
using namespace std;
int n, k, m;
struct node
{
	int id = 10000010;
	int score = 0;
	int per_ans = 0; //完美提交
	int flag = 0;	//提交成功
	vector<int> sub = vector<int>(k + 1, -1);
};
int cmp(node a, node b)
{
	if (a.flag != b.flag)
		return a.flag > b.flag;
	if (a.score != b.score)
		return a.score > b.score;
	if (a.per_ans != b.per_ans)
		return a.per_ans > b.per_ans;
	return a.id < b.id;
}
int question[10010];

int main()
{
	cin >> n >> k >> m;
	node *stu = new node[n + 1];
	for (int i = 1; i <= k; i++)
	{
		scanf("%d", &question[i]);
	}
	for (int i = 1; i <= m; i++)
	{
		int id, que, grade;
		scanf("%d%d%d", &id, &que, &grade);
		if (stu[id].sub[que] <= grade && grade != -1)
		{
			if (stu[id].sub[que] == -1)
				stu[id].score += grade;
			else
				stu[id].score = stu[id].score - stu[id].sub[que] + grade;
			stu[id].id = id;
			if (grade == question[que] &&stu[id].sub[que]!=grade )
				stu[id].per_ans++;
			stu[id].sub[que] = grade;
			stu[id].flag = 1;
			
		}
		else if (grade == -1)
		{
			if (stu[id].sub[que] == -1)
				stu[id].sub[que] = 0;
			stu[id].id = id;
		}
	}
	sort(stu + 1, stu + n + 1, cmp);
	int score = stu[1].score;
	int rank = 1;
	for (int i = 1; i <= n; i++)
	{
		if (!stu[i].flag)
			break;
		if (stu[i].score == score)
			cout << rank << ' ';
		else
		{
			score = stu[i].score;
			cout << i << " ";
			rank = i;
		}
		printf("%05d %d", stu[i].id, stu[i].score);
		//cout << stu[i].id << ' ' << stu[i].score << ' ' << stu[i].per_ans << ' ';
		for (int j = 1; j <= k; j++)
			if (stu[i].sub[j] == -1)
				printf(" -");
			else
				printf(" %d", stu[i].sub[j]);
		cout << endl;
	}
	system("pause");
	return 0;
}
